class Solution {
    
    static long trappingWater(int nums[], int n) { 
        long maxSoFar = nums[0], ans = 0;
        long[] maxLeft = new long[n];
        for(int i=1;i<n;i++) {
            maxLeft[i] = maxSoFar;
            maxSoFar = Math.max(maxSoFar, nums[i]);
        }
        maxSoFar = nums[n-1];
        for(int i=n-2;i>=0;i--) {
            maxLeft[i] = Math.min(maxLeft[i], maxSoFar);
            maxSoFar = Math.max(maxSoFar, nums[i]);
        }
        for(int i=1;i<n-1;i++) {
            ans+=Math.max(0, maxLeft[i]-nums[i]);
        }
        return ans;
    } 
}
