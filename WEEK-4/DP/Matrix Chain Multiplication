class Solution{
    static int matrixMultiplication(int N, int arr[]){
        
        int[][] memo = new int[N][N];
        for(int[] row: memo){
            Arrays.fill(row, -1);
        }
        
        return helper(1, N-1, arr, memo);
    }
    
    static int helper(int i, int j, int[] arr, int[][] memo){
    
        if( i==j ) return 0;
        
        if( memo[i][j] != -1) return memo[i][j];
        
        int mini = (int) 1e9+7;
        // partitions
        for(int k=i;k<j;k++){
            int steps = arr[i-1] * arr[k] * arr[j] + helper( i, k, arr, memo) + helper(k+1, j, arr, memo);
            mini = Math.min(mini, steps);
        }
        
        return memo[i][j] = mini;
    }
}
